plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.michelin'
version = '0.0.1'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring 기본 의존성
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-web-services'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	// 검증 관련
	implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
	implementation 'org.hibernate.validator:hibernate-validator:8.0.0.Final'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// AWS SDK - 명확한 버전 지정
	implementation 'software.amazon.awssdk:s3:2.25.13'
	implementation 'software.amazon.awssdk:auth:2.25.13'
	implementation 'software.amazon.awssdk:regions:2.25.13'
	
	//이메일 관련
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	// 롬복
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// 개발 편의성
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// 데이터베이스
	runtimeOnly 'com.mysql:mysql-connector-j'

	// 테스트 관련
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5' // JSON 처리용
	implementation 'javax.servlet:javax.servlet-api:4.0.1'

}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.withType(JavaCompile) {
    options.compilerArgs += ["-parameters"]
}
